# AUTOGENERATED! DO NOT EDIT! File to edit: 00_core.ipynb (unless otherwise specified).

__all__ = ['GH_HOST', 'GhApi']

# Cell
from fastcore.utils import *
from fastcore.foundation import *
from fastcore.meta import *

import pprint,inspect,json
from inspect import signature,Parameter
from .metadata import funcs
from urllib.request import Request

# Cell
GH_HOST = "https://api.github.com"
_DOC_URL = 'https://docs.github.com/'

# Cell
class GhApi:
    def __init__(self, owner, repo, token=None):
        funcs_ = L(funcs).starmap(GhVerb, client=self)
        self._fs = {k:_GhVerbGroup(v) for k,v in groupby(funcs_, 'tag').items()}
        self._headers = { 'Accept': 'application/vnd.github.v3+json' }
        if token: self._headers['Authorization'] = 'token ' + token
        self.owner,self.repo = owner,repo
        self.repo_url = f"{GH_HOST}/repos/{owner}/{repo}"

    def __dir__(self): return super().__dir__() + list(self._fs)

    def __getattr__(self,k):
        if k in self._fs: return self._fs[k]
        raise AttributeError(k)

    def __call__(self, path, verb, **data):
        "Call GitHub API `path`"
        path = f"{self.repo_url}{path}"
        return dict2obj(_send(path, verb.upper(), headers=self._headers, **data))